const Cars = require('./cars-model.js');
const ExpressError = require('../expressError.js');
const VinValidator = require('vin-validator');


exports.checkCarId = async (req, res, next) => {
  try {
    const car = await Cars.getById(req.params.id);
    if (car) {
      req.car = car;
      next();
    } else {
      const err = new ExpressError('id not found', 404);
      next(err);
    }
  } catch (err) {
    next(new ExpressError(err,500));
  }
};

exports.checkCarPayload = (req, res, next) => {
  const newCar = req.body;
  // checks all require fields and data types
  if (!newCar.vin || !newCar.make || !newCar.model || !newCar.mileage) {
    next(new ExpressError('Vin, Make, Model and Mileage are all required',400));
  } else if (typeof(newCar.vin) !== 'string') {
    next(new ExpressError('vin must be a string', 400));
  } else if (typeof(newCar.make) !== 'string') {
    next(new ExpressError('make of car must be a string', 400));
  } else if (typeof(newCar.model) !== 'string') {
    next(new ExpressError('model of car must be a string', 400));
  } else if (typeof(newCar.mileage) !== 'number') {
    next(new ExpressError('mileage must be an integer', 400))
  } else {
    next();
  }
}

exports.checkVinNumberValid = (req, res, next) => {
  const check = req.body;
  const isValid = VinValidator.validate(check.vin);
  if (isValid) {
    next();
  } else {
    const err = new ExpressError('the vin you provided is invalid', 400);
    next(err);
  }
}

exports.checkVinNumberUnique = async (req, res, next) => {
  const newCar = req.body;
  try {
    const cars = await Cars.getAll();
    console.log(cars);
    const bool = cars.filter( (car) => {
      car.vin = newCar.vin;
    });
    console.log(bool);
    if (!bool[0]) {
      next();
    } else {
      const err = new ExpressError('This Vin number is not unique', 400);
      next(err);
    }
  } catch (err) {
    next(new ExpressError(err, 500))
  }
}

// id	unsigned integer	primary key, auto-increments, generated by database
// vin	string	required, unique
// make	string	required
// model	string	required
// mileage	numeric	required
// title	string	optional
// transmission	string	optional
